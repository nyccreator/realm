spring.application.name=realm

# Neo4j Configuration
spring.neo4j.uri=${SPRING_NEO4J_URI:bolt://localhost:7687}
spring.neo4j.authentication.username=${SPRING_NEO4J_AUTHENTICATION_USERNAME}
spring.neo4j.authentication.password=${SPRING_NEO4J_AUTHENTICATION_PASSWORD}

# Connection pool optimization for graph operations
spring.neo4j.pool.idle-time-before-connection-test=${SPRING_NEO4J_POOL_IDLE_TIME_BEFORE_CONNECTION_TEST:30s}
spring.neo4j.pool.max-connection-pool-size=${SPRING_NEO4J_POOL_MAX_CONNECTION_POOL_SIZE:50}
spring.neo4j.pool.max-connection-lifetime=${SPRING_NEO4J_POOL_MAX_CONNECTION_LIFETIME:1h}
spring.neo4j.pool.connection-acquisition-timeout=${SPRING_NEO4J_POOL_CONNECTION_ACQUISITION_TIMEOUT:60s}
spring.neo4j.pool.metrics-enabled=${SPRING_NEO4J_POOL_METRICS_ENABLED:true}

# Transaction management for complex graph operations
spring.neo4j.transaction.timeout=30s

# JWT Configuration (1-hour access tokens as per Section 3.1)
# Environment variable required - no default provided for security
realm.jwt.secret=${JWT_SECRET}
realm.jwt.expiration=${JWT_EXPIRATION:3600000}
realm.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Security Configuration
# CORS settings for frontend integration
realm.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000,http://127.0.0.1:3001}
realm.cors.max-age=${CORS_MAX_AGE:3600}

# Logging Configuration
logging.level.org.springframework.data.neo4j=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_NEO4J:DEBUG}
logging.level.org.neo4j.driver=${LOGGING_LEVEL_ORG_NEO4J_DRIVER:INFO}
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
